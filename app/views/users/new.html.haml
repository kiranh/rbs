:javascript
  jQuery(document).ready(function() {
    jQuery('#login_a').tipsy({trigger: 'manual', gravity: 'w'});
    jQuery('#password_a').tipsy({trigger: 'manual', gravity: 'w'});
    jQuery('#password_a1').tipsy({trigger: 'manual', gravity: 'w'});
    jQuery('#email_a').tipsy({trigger: 'manual', gravity: 'w'});
    jQuery('#business_a').tipsy({trigger: 'manual', gravity: 'w'});
    jQuery('#country_a').tipsy({trigger: 'manual', gravity: 'w'});
    jQuery('#date_tip').tipsy({trigger: 'manual', gravity: 'w'});
    jQuery('#user_birthday_1i, #user_birthday_2i, #user_birthday_3i').focus(function() {
      jQuery('#date_tip').tipsy("show");
    });
    jQuery('#user_birthday_1i, #user_birthday_2i, #user_birthday_3i').focusout(function() {
      jQuery('#date_tip').tipsy("hide");
    });
  });

  function validate_param(){
    var false_l = 0;
    if(validate_login()){if(is_login_valid()){} else{false_l = 1}} else{false_l = 1}
    if(validate_password()){} else{false_l = 1}
    if(validate_password1()){} else{false_l = 1}
    if(validate_email()){if(is_email_valid()){} else{false_l = 1}} else{false_l = 1}
    if(validate_business()){} else{false_l = 1}
    if(validate_country()){} else{false_l = 1}
    if(validate_password() && (validate_password1())){if(validate_password_match()){} else{false_l = 1}}else{}
    if(false_l == 1){
      jQuery('#user_login').attr("original-title", "");
      jQuery('#user_password').attr("original-title", "");
      jQuery('#user_password_confirmation').attr("original-title", "");
      jQuery('#user_email').attr("original-title", "");
      jQuery('#user_business_name').attr("original-title", "");
      jQuery('#user_country_id').attr("original-title", "");
      return false;
    } else{return true;}
  }

  function validate_login(){
    if(jQuery("#user_login").val() == ""){jQuery('#login_a').tipsy("show");return false;}
    else{jQuery('#login_a').tipsy("hide");return true;}
  }

  function validate_password_match(){
    if(jQuery("#user_password").val() == jQuery("#user_password_confirmation").val()){jQuery('#password_a').tipsy("hide");return true;}
    else{
        jQuery('#password_a1').attr("original-title", "Must match password!");
        jQuery('#password_a1').tipsy("show");
        return false;}
  }

  function validate_password(){
    if(jQuery("#user_password").val() == ""){jQuery('#password_a').tipsy("show");return false;}
    else{jQuery('#password_a').tipsy("hide");return true;}
  }
  function validate_password1(){
    if(jQuery("#user_password_confirmation").val() == ""){jQuery('#password_a1').tipsy("show");return false;}
    else{jQuery('#password_a1').tipsy("hide");return true;}
  }
  function validate_country(){
    if(jQuery("#user_country_id").val() == ""){jQuery('#country_a').tipsy("show");return false;}
    else{jQuery('#country_a').tipsy("hide");return true;}
  }
  function validate_business(){
    if(jQuery("#user_business_name").val() == ""){jQuery('#business_a').tipsy("show");return false;}
    else{jQuery('#business_a').tipsy("hide");return true;}
  }
  function validate_email(){
    if(jQuery("#user_email").val() == ""){jQuery('#email_a').tipsy("show");return false;}
    else{jQuery('#email_a').tipsy("hide");return true;}
  }

  function is_login_valid(){
    var alphaExp = /^[\sA-Za-z0-9_-]+$/;
    if(jQuery("#user_login").val().match(alphaExp) != null){return true;}
    else{
      jQuery('#login_a').attr("original-title", "Enter a valid username!");
      jQuery('#login_a').tipsy("show");
      return false;}
  }
  function is_email_valid(){
    var alphaExp = /^([^@\s]+)@((?:[-a-z0-9A-Z]+\.)+[a-zA-Z]{2,})$/;
    if(jQuery("#user_email").val().match(alphaExp) != null){return true;}
    else{
      jQuery('#email_a').attr("original-title", "Enter a valid email!");
      jQuery('#email_a').tipsy("show");
      return false;}
  }

.yui-b
  -box do
    %h3
      =:tips.l

  -box :class => 'alt' do
    %p
      =:after_signing_up_youll_receive_an_e_mail_confirmation_message.l
    %p
      =:click_the_activation_link_in_the_e_mail_to_log_in.l
    %p= link_to :already_have_an_account.l, "/login"

#yui-main
  .yui-b
    -box do
      %h3=:sign_up.l
      = error_messages_for :user
      = form_for :user, :url => users_path, :html => {:class => 'MainForm', :onsubmit=>"return validate_param();" } do |f|
        %label{"for"=>"user_login"} 
          =:username.l
          \:
        = f.text_field :login, "original-title" => :required_your_username_must_not_contain_numerals_spaces_or_special_characters.l, :class => "reg_box"
        %a#login_a{"original-title"=>"Username can't be blank!"}
        %label{"for"=>"user_email"}
          =:e_mail_address.l
          \:        
        = f.text_field :email, "original-title" => :required_we_will_send_a_confirmation_e_mail_to_the_address_you_enter.l, :class => "reg_box"
        %a#email_a{"original-title"=>"Email can't be blank!"}
        %label{"for"=>"user_birthdate"}
          =:birthday.l
          \:
        = date_select :user, :birthday, {:start_year => (Time.now.year - configatron.max_age), :end_year => (Time.now.year - configatron.min_age)}
        %a#date_tip{"original-title" => :required_you_must_be_at_least_years_old_to_sign_up.l_with_args(:min_age => configatron.min_age)}
        -if configatron.require_captcha_on_signup
          .right{:style => 'margin-top:2em;'}= recaptcha_tags

        %label{"for"=>"user_password"}
          =:type_your_password.l
        = f.password_field :password, "original-title" => :reg_password_instruct.l, :class => "reg_box"
        %a#password_a{"original-title"=>"Password can't be blank!"}
        %label{"for"=>"user_password_confirmation"}
          =:re_type_your_password_to_confirm.l
        = f.password_field :password_confirmation
        %a#password_a1{"original-title"=>"Confirm password can't be blank!"}
        %label{"for"=>"business_name"}
          =:business.l
          \:
        = f.text_field :business_name, "original-title" => :reg_business_instruct.l, :class => "reg_box"
        %a#business_a{"original-title"=>"Business can't be blank!"}
        %label{"for"=>"country"}
          =:country.l
          \:
        = select("user", "country_id", Country.all.collect {|p| [ p.name, p.id ] }, {:include_blank => 'select one'}, "original-title" => :reg_country_instruct.l, :class => "reg_box")
        %a#country_a{"original-title"=>"Select your country!"}



        = hidden_field_tag :inviter_id, params[:inviter_id]
        = hidden_field_tag :inviter_code, params[:inviter_code]
        %p= submit_tag :sign_up.l
